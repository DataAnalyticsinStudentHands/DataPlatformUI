import{_ as C,u as m,a as f,P as E,o as d,c as v,l as e,b as l,w as c,U as w,k as o,j as x,t as _,M as k,n as y,W as S,F as D,r as b,m as I,Q as V}from"./index.06e63598.js";import{D as L}from"./datetime.a1e71b77.js";const N={data(){return{experienceData:[],showInactive:!1,selectedExperiences:[],searchQuery:""}},mounted(){this.fetchExperienceData(),window.scrollTo(0,0)},methods:{fetchExperienceData(){let t=m().token,u="https://cis-4339.herokuapp.com/instructorSideData/experiences/";f.get(u,{headers:{token:t}}).then(a=>{this.experienceData=a.data}).catch(a=>{console.log(a)})},formatDate(n){return L.fromISO(n).toFormat("MM-dd-yyyy")},editExperience(n){this.$router.push({name:"instructorSpecificExperience",params:{id:n}})},toggleShowInactive(){this.showInactive=!this.showInactive},deactivateExperiences(){let t=m().token;const u={experienceStatus:!1},a=this.selectedExperiences.map(s=>{let i=`https://cis-4339.herokuapp.com/instructorSideData/experiences/${s}`;return f.put(i,u,{headers:{token:t}})});Promise.all(a).then(()=>{this.selectedExperiences=[],this.fetchExperienceData(),alert("The experience(s) have been deactivated."),this.$router.push("/instructorExperiences")}).catch(s=>{console.log(s)})},activateExperiences(){let t=m().token;const u={experienceStatus:!0},a=this.selectedExperiences.map(s=>{let i=`https://cis-4339.herokuapp.com/instructorSideData/experiences/${s}`;return f.put(i,u,{headers:{token:t}})});Promise.all(a).then(()=>{this.selectedExperiences=[],this.fetchExperienceData(),alert("The experience(s) have been activated."),this.$router.push("/instructorExperiences")}).catch(s=>{console.log(s)})}},computed:{filteredExperienceData(){const n=this.searchQuery.toLowerCase().trim();return this.showInactive?this.experienceData.filter(t=>!t.experienceStatus&&(t.experienceCategory.toLowerCase().includes(n)||t.experienceName.toLowerCase().includes(n))):this.experienceData.filter(t=>t.experienceStatus&&(t.experienceCategory.toLowerCase().includes(n)||t.experienceName.toLowerCase().includes(n)))}}},A=e("br",null,null,-1),T=e("br",null,null,-1),U=e("p",{class:"font-weight-black text-h6"},"Experiences",-1),B=e("br",null,null,-1),Q=e("br",null,null,-1),F=e("br",null,null,-1),M=e("br",null,null,-1),P=e("br",null,null,-1),R=e("br",null,null,-1),j={style:{display:"flex","justify-content":"center"}},q={style:{"max-height":"400px","overflow-y":"auto"}},O=e("thead",null,[e("tr",null,[e("th",{class:"text-left"}),e("th",{class:"text-left"},"Experience Category"),e("th",{class:"text-left"},"Experience Name"),e("th",{class:"text-left"},"Status"),e("th"),e("th")])],-1),W={class:"text-left"},z=["value"],G=["onClick"],H=["onClick"],J=["onClick"],K=e("td",null,null,-1),X=e("td",null,null,-1);function Y(n,t,u,a,s,i){const h=E("router-link"),g=E("center");return d(),v("main",null,[e("div",null,[l(g,null,{default:c(()=>[A,e("h2",null,[l(h,{to:"/instructorSemesters"},{default:c(()=>[o("Semesters")]),_:1}),o(" | "),l(h,{to:"/instructorExperiences"},{default:c(()=>[o("Experiences")]),_:1}),o(" | "),l(h,{to:"/instructorActivities"},{default:c(()=>[o("Activities")]),_:1})]),T,U,B,l(x,{style:{"text-align":"center","margin-right":"2rem"}},{default:c(()=>[l(h,{to:"/instructorAddExperience"},{default:c(()=>[o("Add New Experience")]),_:1})]),_:1}),l(x,{onClick:i.toggleShowInactive},{default:c(()=>[o(_(s.showInactive?"Show Active Experiences":"Show Inactive Experiences"),1)]),_:1},8,["onClick"]),Q,F,s.selectedExperiences.length>0?(d(),k(x,{key:0,onClick:i.deactivateExperiences,style:{"text-align":"center","margin-right":"2rem"}},{default:c(()=>[o(" Deactivate ")]),_:1},8,["onClick"])):y("",!0),s.selectedExperiences.length>0?(d(),k(x,{key:1,onClick:i.activateExperiences},{default:c(()=>[o(" Activate ")]),_:1},8,["onClick"])):y("",!0),M,P,l(S,{modelValue:s.searchQuery,"onUpdate:modelValue":t[0]||(t[0]=r=>s.searchQuery=r),label:"Search by experience category or name","solo-inverted":"","hide-details":"",outlined:"",dense:""},null,8,["modelValue"]),R]),_:1})]),e("div",j,[e("div",q,[l(w,{style:{width:"100%"}},{default:c(()=>[O,e("tbody",null,[(d(!0),v(D,null,b(i.filteredExperienceData,r=>(d(),v("tr",{key:r._id},[e("td",W,[I(e("input",{type:"checkbox","onUpdate:modelValue":t[1]||(t[1]=p=>s.selectedExperiences=p),value:r._id,style:{outline:"2px solid #808080","margin-right":"10px"}},null,8,z),[[V,s.selectedExperiences]])]),e("td",{class:"text-left",onClick:p=>i.editExperience(r._id)},_(r.experienceCategory),9,G),e("td",{class:"text-left",onClick:p=>i.editExperience(r._id)},_(r.experienceName),9,H),e("td",{class:"text-left",onClick:p=>i.editExperience(r._id)},_(r.experienceStatus?"Active":"Inactive"),9,J),K,X]))),128))])]),_:1})])])])}const ee=C(N,[["render",Y]]);export{ee as default};
